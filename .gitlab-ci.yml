stages:
  - install
  - lint
  - test
  - build
  - pack-dry
  - deploy
variables:
  NODE_ENV: production
  CI: 'true'
image: 'node:10.15.3'
install_react-filter:
  stage: install
  cache:
    key: 'react-filter-${CI_COMMIT_REF_SLUG}'
    policy: push
    paths:
      - react-filter/node_modules
  script:
    - cd react-filter
    - NODE_ENV=development npm install
lint_react-filter:
  stage: lint
  cache:
    key: 'react-filter-${CI_COMMIT_REF_SLUG}'
    policy: pull
    paths:
      - react-filter/node_modules
  script:
    - cd react-filter
    - npm run lint
test_node-8_react-filter:
  stage: test
  image: 'node:8'
  cache:
    key: 'react-filter-${CI_COMMIT_REF_SLUG}'
    policy: pull
    paths:
      - react-filter/node_modules
  script:
    - cd react-filter
    - npm test
test_node-6_react-filter:
  stage: test
  image: 'node:6'
  cache:
    key: 'react-filter-${CI_COMMIT_REF_SLUG}'
    policy: pull
    paths:
      - react-filter/node_modules
  script:
    - cd react-filter
    - npm test
test_node-10_react-filter:
  stage: test
  image: 'node:10'
  cache:
    key: 'react-filter-${CI_COMMIT_REF_SLUG}'
    policy: pull
    paths:
      - react-filter/node_modules
  script:
    - cd react-filter
    - npm test
build_react-filter:
  stage: build
  cache:
    key: 'react-filter-${CI_COMMIT_REF_SLUG}'
    policy: pull-push
    paths:
      - react-filter/node_modules
      - react-filter/dist
  script:
    - cd utils
    - NODE_ENV=development npm install
    - npm run build
    - cd ..
    - cd react-filter
    - npm run prepare
    - npm run build
dry-pack_react-filter:
  stage: pack-dry
  cache:
    key: 'react-filter-${CI_COMMIT_REF_SLUG}'
    policy: pull
    paths:
      - react-filter/node_modules
      - react-filter/dist
  script:
    - cd react-filter
    - npm pack --dry-run
publish_react-filter:
  stage: deploy
  only:
    - tags
  cache:
    key: 'react-filter-${CI_COMMIT_REF_SLUG}'
    policy: pull
    paths:
      - react-filter/node_modules
      - react-filter/dist
  artifacts:
    paths:
      - react-filter-*.tgz
  script:
    - cd react-filter
    - 'npx nodexec publish:conditionally'
install_react-router:
  stage: install
  cache:
    key: 'react-router-${CI_COMMIT_REF_SLUG}'
    policy: push
    paths:
      - react-router/node_modules
  script:
    - cd react-router
    - NODE_ENV=development npm install
lint_react-router:
  stage: lint
  cache:
    key: 'react-router-${CI_COMMIT_REF_SLUG}'
    policy: pull
    paths:
      - react-router/node_modules
  script:
    - cd react-router
    - npm run lint
test_node-8_react-router:
  stage: test
  image: 'node:8'
  cache:
    key: 'react-router-${CI_COMMIT_REF_SLUG}'
    policy: pull
    paths:
      - react-router/node_modules
  script:
    - cd react-router
    - npm test
test_node-6_react-router:
  stage: test
  image: 'node:6'
  cache:
    key: 'react-router-${CI_COMMIT_REF_SLUG}'
    policy: pull
    paths:
      - react-router/node_modules
  script:
    - cd react-router
    - npm test
test_node-10_react-router:
  stage: test
  image: 'node:10'
  cache:
    key: 'react-router-${CI_COMMIT_REF_SLUG}'
    policy: pull
    paths:
      - react-router/node_modules
  script:
    - cd react-router
    - npm test
build_react-router:
  stage: build
  cache:
    key: 'react-router-${CI_COMMIT_REF_SLUG}'
    policy: pull-push
    paths:
      - react-router/node_modules
      - react-router/dist
  script:
    - cd react-router
    - npm run build
dry-pack_react-router:
  stage: pack-dry
  cache:
    key: 'react-router-${CI_COMMIT_REF_SLUG}'
    policy: pull
    paths:
      - react-router/node_modules
      - react-router/dist
  script:
    - cd react-router
    - npm pack --dry-run
publish_react-router:
  stage: deploy
  only:
    - tags
  cache:
    key: 'react-router-${CI_COMMIT_REF_SLUG}'
    policy: pull
    paths:
      - react-router/node_modules
      - react-router/dist
  artifacts:
    paths:
      - react-router-*.tgz
  script:
    - cd react-router
    - 'npx nodexec publish:conditionally'
install_react-store:
  stage: install
  cache:
    key: 'react-store-${CI_COMMIT_REF_SLUG}'
    policy: push
    paths:
      - react-store/node_modules
  script:
    - cd react-store
    - NODE_ENV=development npm install
lint_react-store:
  stage: lint
  cache:
    key: 'react-store-${CI_COMMIT_REF_SLUG}'
    policy: pull
    paths:
      - react-store/node_modules
  script:
    - cd react-store
    - npm run lint
test_node-8_react-store:
  stage: test
  image: 'node:8'
  cache:
    key: 'react-store-${CI_COMMIT_REF_SLUG}'
    policy: pull
    paths:
      - react-store/node_modules
  script:
    - cd react-store
    - npm test
test_node-6_react-store:
  stage: test
  image: 'node:6'
  cache:
    key: 'react-store-${CI_COMMIT_REF_SLUG}'
    policy: pull
    paths:
      - react-store/node_modules
  script:
    - cd react-store
    - npm test
test_node-10_react-store:
  stage: test
  image: 'node:10'
  cache:
    key: 'react-store-${CI_COMMIT_REF_SLUG}'
    policy: pull
    paths:
      - react-store/node_modules
  script:
    - cd react-store
    - npm test
build_react-store:
  stage: build
  cache:
    key: 'react-store-${CI_COMMIT_REF_SLUG}'
    policy: pull-push
    paths:
      - react-store/node_modules
      - react-store/dist
  script:
    - cd store
    - NODE_ENV=development npm install
    - npm run build
    - cd ..
    - cd react-store
    - npm run prepare
    - npm run build
dry-pack_react-store:
  stage: pack-dry
  cache:
    key: 'react-store-${CI_COMMIT_REF_SLUG}'
    policy: pull
    paths:
      - react-store/node_modules
      - react-store/dist
  script:
    - cd react-store
    - npm pack --dry-run
publish_react-store:
  stage: deploy
  only:
    - tags
  cache:
    key: 'react-store-${CI_COMMIT_REF_SLUG}'
    policy: pull
    paths:
      - react-store/node_modules
      - react-store/dist
  artifacts:
    paths:
      - react-store-*.tgz
  script:
    - cd react-store
    - 'npx nodexec publish:conditionally'
install_request:
  stage: install
  cache:
    key: 'request-${CI_COMMIT_REF_SLUG}'
    policy: push
    paths:
      - request/node_modules
  script:
    - cd request
    - NODE_ENV=development npm install
lint_request:
  stage: lint
  cache:
    key: 'request-${CI_COMMIT_REF_SLUG}'
    policy: pull
    paths:
      - request/node_modules
  script:
    - cd request
    - npm run lint
test_node-8_request:
  stage: test
  image: 'node:8'
  cache:
    key: 'request-${CI_COMMIT_REF_SLUG}'
    policy: pull
    paths:
      - request/node_modules
  script:
    - cd request
    - npm test
test_node-6_request:
  stage: test
  image: 'node:6'
  cache:
    key: 'request-${CI_COMMIT_REF_SLUG}'
    policy: pull
    paths:
      - request/node_modules
  script:
    - cd request
    - npm test
test_node-10_request:
  stage: test
  image: 'node:10'
  cache:
    key: 'request-${CI_COMMIT_REF_SLUG}'
    policy: pull
    paths:
      - request/node_modules
  script:
    - cd request
    - npm test
build_request:
  stage: build
  cache:
    key: 'request-${CI_COMMIT_REF_SLUG}'
    policy: pull-push
    paths:
      - request/node_modules
      - request/dist
  script:
    - cd utils
    - NODE_ENV=development npm install
    - npm run build
    - cd ..
    - cd request
    - npm run prepare
    - npm run build
dry-pack_request:
  stage: pack-dry
  cache:
    key: 'request-${CI_COMMIT_REF_SLUG}'
    policy: pull
    paths:
      - request/node_modules
      - request/dist
  script:
    - cd request
    - npm pack --dry-run
publish_request:
  stage: deploy
  only:
    - tags
  cache:
    key: 'request-${CI_COMMIT_REF_SLUG}'
    policy: pull
    paths:
      - request/node_modules
      - request/dist
  artifacts:
    paths:
      - request-*.tgz
  script:
    - cd request
    - 'npx nodexec publish:conditionally'
install_service-container:
  stage: install
  cache:
    key: 'service-container-${CI_COMMIT_REF_SLUG}'
    policy: push
    paths:
      - service-container/node_modules
  script:
    - cd service-container
    - NODE_ENV=development npm install
lint_service-container:
  stage: lint
  cache:
    key: 'service-container-${CI_COMMIT_REF_SLUG}'
    policy: pull
    paths:
      - service-container/node_modules
  script:
    - cd service-container
    - npm run lint
test_node-8_service-container:
  stage: test
  image: 'node:8'
  cache:
    key: 'service-container-${CI_COMMIT_REF_SLUG}'
    policy: pull
    paths:
      - service-container/node_modules
  script:
    - cd service-container
    - npm test
test_node-6_service-container:
  stage: test
  image: 'node:6'
  cache:
    key: 'service-container-${CI_COMMIT_REF_SLUG}'
    policy: pull
    paths:
      - service-container/node_modules
  script:
    - cd service-container
    - npm test
test_node-10_service-container:
  stage: test
  image: 'node:10'
  cache:
    key: 'service-container-${CI_COMMIT_REF_SLUG}'
    policy: pull
    paths:
      - service-container/node_modules
  script:
    - cd service-container
    - npm test
build_service-container:
  stage: build
  cache:
    key: 'service-container-${CI_COMMIT_REF_SLUG}'
    policy: pull-push
    paths:
      - service-container/node_modules
      - service-container/dist
  script:
    - cd service-container
    - npm run build
dry-pack_service-container:
  stage: pack-dry
  cache:
    key: 'service-container-${CI_COMMIT_REF_SLUG}'
    policy: pull
    paths:
      - service-container/node_modules
      - service-container/dist
  script:
    - cd service-container
    - npm pack --dry-run
publish_service-container:
  stage: deploy
  only:
    - tags
  cache:
    key: 'service-container-${CI_COMMIT_REF_SLUG}'
    policy: pull
    paths:
      - service-container/node_modules
      - service-container/dist
  artifacts:
    paths:
      - service-container-*.tgz
  script:
    - cd service-container
    - 'npx nodexec publish:conditionally'
install_store:
  stage: install
  cache:
    key: 'store-${CI_COMMIT_REF_SLUG}'
    policy: push
    paths:
      - store/node_modules
  script:
    - cd store
    - NODE_ENV=development npm install
lint_store:
  stage: lint
  cache:
    key: 'store-${CI_COMMIT_REF_SLUG}'
    policy: pull
    paths:
      - store/node_modules
  script:
    - cd store
    - npm run lint
test_node-8_store:
  stage: test
  image: 'node:8'
  cache:
    key: 'store-${CI_COMMIT_REF_SLUG}'
    policy: pull
    paths:
      - store/node_modules
  script:
    - cd store
    - npm test
test_node-6_store:
  stage: test
  image: 'node:6'
  cache:
    key: 'store-${CI_COMMIT_REF_SLUG}'
    policy: pull
    paths:
      - store/node_modules
  script:
    - cd store
    - npm test
test_node-10_store:
  stage: test
  image: 'node:10'
  cache:
    key: 'store-${CI_COMMIT_REF_SLUG}'
    policy: pull
    paths:
      - store/node_modules
  script:
    - cd store
    - npm test
build_store:
  stage: build
  cache:
    key: 'store-${CI_COMMIT_REF_SLUG}'
    policy: pull-push
    paths:
      - store/node_modules
      - store/dist
  script:
    - cd store
    - npm run build
dry-pack_store:
  stage: pack-dry
  cache:
    key: 'store-${CI_COMMIT_REF_SLUG}'
    policy: pull
    paths:
      - store/node_modules
      - store/dist
  script:
    - cd store
    - npm pack --dry-run
publish_store:
  stage: deploy
  only:
    - tags
  cache:
    key: 'store-${CI_COMMIT_REF_SLUG}'
    policy: pull
    paths:
      - store/node_modules
      - store/dist
  artifacts:
    paths:
      - store-*.tgz
  script:
    - cd store
    - 'npx nodexec publish:conditionally'
install_transform:
  stage: install
  cache:
    key: 'transform-${CI_COMMIT_REF_SLUG}'
    policy: push
    paths:
      - transform/node_modules
  script:
    - cd transform
    - NODE_ENV=development npm install
lint_transform:
  stage: lint
  cache:
    key: 'transform-${CI_COMMIT_REF_SLUG}'
    policy: pull
    paths:
      - transform/node_modules
  script:
    - cd transform
    - npm run lint
test_node-8_transform:
  stage: test
  image: 'node:8'
  cache:
    key: 'transform-${CI_COMMIT_REF_SLUG}'
    policy: pull
    paths:
      - transform/node_modules
  script:
    - cd transform
    - npm test
test_node-6_transform:
  stage: test
  image: 'node:6'
  cache:
    key: 'transform-${CI_COMMIT_REF_SLUG}'
    policy: pull
    paths:
      - transform/node_modules
  script:
    - cd transform
    - npm test
test_node-10_transform:
  stage: test
  image: 'node:10'
  cache:
    key: 'transform-${CI_COMMIT_REF_SLUG}'
    policy: pull
    paths:
      - transform/node_modules
  script:
    - cd transform
    - npm test
build_transform:
  stage: build
  cache:
    key: 'transform-${CI_COMMIT_REF_SLUG}'
    policy: pull-push
    paths:
      - transform/node_modules
      - transform/dist
  script:
    - cd transform
    - npm run build
dry-pack_transform:
  stage: pack-dry
  cache:
    key: 'transform-${CI_COMMIT_REF_SLUG}'
    policy: pull
    paths:
      - transform/node_modules
      - transform/dist
  script:
    - cd transform
    - npm pack --dry-run
publish_transform:
  stage: deploy
  only:
    - tags
  cache:
    key: 'transform-${CI_COMMIT_REF_SLUG}'
    policy: pull
    paths:
      - transform/node_modules
      - transform/dist
  artifacts:
    paths:
      - transform-*.tgz
  script:
    - cd transform
    - 'npx nodexec publish:conditionally'
install_utils:
  stage: install
  cache:
    key: 'utils-${CI_COMMIT_REF_SLUG}'
    policy: push
    paths:
      - utils/node_modules
  script:
    - cd utils
    - NODE_ENV=development npm install
lint_utils:
  stage: lint
  cache:
    key: 'utils-${CI_COMMIT_REF_SLUG}'
    policy: pull
    paths:
      - utils/node_modules
  script:
    - cd utils
    - npm run lint
test_node-8_utils:
  stage: test
  image: 'node:8'
  cache:
    key: 'utils-${CI_COMMIT_REF_SLUG}'
    policy: pull
    paths:
      - utils/node_modules
  script:
    - cd utils
    - npm test
test_node-6_utils:
  stage: test
  image: 'node:6'
  cache:
    key: 'utils-${CI_COMMIT_REF_SLUG}'
    policy: pull
    paths:
      - utils/node_modules
  script:
    - cd utils
    - npm test
test_node-10_utils:
  stage: test
  image: 'node:10'
  cache:
    key: 'utils-${CI_COMMIT_REF_SLUG}'
    policy: pull
    paths:
      - utils/node_modules
  script:
    - cd utils
    - npm test
build_utils:
  stage: build
  cache:
    key: 'utils-${CI_COMMIT_REF_SLUG}'
    policy: pull-push
    paths:
      - utils/node_modules
      - utils/dist
  script:
    - cd utils
    - npm run build
dry-pack_utils:
  stage: pack-dry
  cache:
    key: 'utils-${CI_COMMIT_REF_SLUG}'
    policy: pull
    paths:
      - utils/node_modules
      - utils/dist
  script:
    - cd utils
    - npm pack --dry-run
publish_utils:
  stage: deploy
  only:
    - tags
  cache:
    key: 'utils-${CI_COMMIT_REF_SLUG}'
    policy: pull
    paths:
      - utils/node_modules
      - utils/dist
  artifacts:
    paths:
      - utils-*.tgz
  script:
    - cd utils
    - 'npx nodexec publish:conditionally'
install_validation:
  stage: install
  cache:
    key: 'validation-${CI_COMMIT_REF_SLUG}'
    policy: push
    paths:
      - validation/node_modules
  script:
    - cd validation
    - NODE_ENV=development npm install
lint_validation:
  stage: lint
  cache:
    key: 'validation-${CI_COMMIT_REF_SLUG}'
    policy: pull
    paths:
      - validation/node_modules
  script:
    - cd validation
    - npm run lint
test_node-8_validation:
  stage: test
  image: 'node:8'
  cache:
    key: 'validation-${CI_COMMIT_REF_SLUG}'
    policy: pull
    paths:
      - validation/node_modules
  script:
    - cd validation
    - npm test
test_node-6_validation:
  stage: test
  image: 'node:6'
  cache:
    key: 'validation-${CI_COMMIT_REF_SLUG}'
    policy: pull
    paths:
      - validation/node_modules
  script:
    - cd validation
    - npm test
test_node-10_validation:
  stage: test
  image: 'node:10'
  cache:
    key: 'validation-${CI_COMMIT_REF_SLUG}'
    policy: pull
    paths:
      - validation/node_modules
  script:
    - cd validation
    - npm test
build_validation:
  stage: build
  cache:
    key: 'validation-${CI_COMMIT_REF_SLUG}'
    policy: pull-push
    paths:
      - validation/node_modules
      - validation/dist
  script:
    - cd utils
    - NODE_ENV=development npm install
    - npm run build
    - cd ..
    - cd validation
    - npm run prepare
    - npm run build
dry-pack_validation:
  stage: pack-dry
  cache:
    key: 'validation-${CI_COMMIT_REF_SLUG}'
    policy: pull
    paths:
      - validation/node_modules
      - validation/dist
  script:
    - cd validation
    - npm pack --dry-run
publish_validation:
  stage: deploy
  only:
    - tags
  cache:
    key: 'validation-${CI_COMMIT_REF_SLUG}'
    policy: pull
    paths:
      - validation/node_modules
      - validation/dist
  artifacts:
    paths:
      - validation-*.tgz
  script:
    - cd validation
    - 'npx nodexec publish:conditionally'
